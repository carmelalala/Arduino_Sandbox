#include "DHT.h"
#include "Arduino.h"
#include "Wire.h"
#include "DS3231.h"


#define DHTPIN 2   
#define DHTTYPE DHT11
#define DS3231_I2C_ADDRESS 0x68

 byte decToBcd(byte val){
  return( (val/10*16) + (val%10) );
}
// Convert binary coded decimal to normal decimal numbers
byte bcdToDec(byte val){
  return( (val/16*10) + (val%16) );
}
char blueToothVal;           //value sent over via bluetooth
char lastValue;              //stores last state of device (on/off)
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  digitalWrite(8, HIGH);
  digitalWrite(9, HIGH);
  digitalWrite(10, HIGH);
  digitalWrite(11, HIGH);
Serial.begin(9600);
Wire.begin();
dht.begin();

  /*setDS3231time(03,24,13,5,25,2,21);*/
}

void displayTime(){
  byte second, minute, hour, dayOfWeek, dayOfMonth, month, year;
  // retrieve data from DS3231
  readDS3231time(&second, &minute, &hour, &dayOfWeek, &dayOfMonth, &month,
  &year);
  // send it to the serial monitor
  Serial.print(hour, DEC);
  // convert the byte variable to a decimal number when displayed
  Serial.print(":");
  if (minute<10){
    Serial.print("0");
  }
  Serial.print(minute, DEC);
  Serial.print(":");
  if (second<10){
    Serial.print("0");
  }
  Serial.print(second, DEC);
  Serial.print(" ");
  Serial.print(dayOfMonth, DEC);
  Serial.print("/");
  Serial.print(month, DEC);
  Serial.print("/");
  Serial.print(year, DEC);
  Serial.print(" Day of week: ");
  switch(dayOfWeek){
  case 1:
    Serial.println("Sunday");
    break;
  case 2:
    Serial.println("Monday");
    break;
  case 3:
    Serial.println("Tuesday");
    break;
  case 4:
    Serial.println("Wednesday");
    break;
  case 5:
    Serial.println("Thursday");
    break;
  case 6:
    Serial.println("Friday");
    break;
  case 7:
    Serial.println("Saturday");
    break;
  }
}

void setDS3231time(byte second, byte minute, byte hour, byte dayOfWeek, byte
dayOfMonth, byte month, byte year){
  // sets time and date data to DS3231
  Wire.beginTransmission(DS3231_I2C_ADDRESS);
  Wire.write(0); // set next input to start at the seconds register
  Wire.write(decToBcd(second)); // set seconds
  Wire.write(decToBcd(minute)); // set minutes
  Wire.write(decToBcd(hour)); // set hours
  Wire.write(decToBcd(dayOfWeek)); // set day of week (1=Sunday, 7=Saturday)
  Wire.write(decToBcd(dayOfMonth)); // set date (1 to 31)
  Wire.write(decToBcd(month)); // set month
  Wire.write(decToBcd(year)); // set year (0 to 99)
  Wire.endTransmission();
}

void readDS3231time(byte *second,
byte *minute,
byte *hour,
byte *dayOfWeek,
byte *dayOfMonth,
byte *month,
byte *year){
  Wire.beginTransmission(DS3231_I2C_ADDRESS);
  Wire.write(0); // set DS3231 register pointer to 00h
  Wire.endTransmission();
  Wire.requestFrom(DS3231_I2C_ADDRESS, 7);
  // request seven bytes of data from DS3231 starting from register 00h
  *second = bcdToDec(Wire.read() & 0x7f);
  *minute = bcdToDec(Wire.read());
  *hour = bcdToDec(Wire.read() & 0x3f);
  *dayOfWeek = bcdToDec(Wire.read());
  *dayOfMonth = bcdToDec(Wire.read());
  *month = bcdToDec(Wire.read());
  *year = bcdToDec(Wire.read());
}

void turnOffr1(){
  byte second, minute, hour, dayOfWeek, dayOfMonth, month, year;
  readDS3231time(&second, &minute, &hour, &dayOfWeek, &dayOfMonth, &month,
  &year);

  Serial.print(hour);
  // convert the byte variable to a decimal number when displayed
  Serial.print(":");
  if (minute<10){
    Serial.print("0");
  }
  Serial.print(minute);

  if(hour==4 && minute==45){
    blueToothVal='b';
    lastValue=blueToothVal;
    digitalWrite(8,HIGH);
  }
  else if(hour==6 && minute==30){
    blueToothVal='f';
    lastValue=blueToothVal;
    digitalWrite(10,HIGH);
  }
   else if(hour==19 && minute==15){
    blueToothVal='e';
    lastValue=blueToothVal;
    digitalWrite(10,LOW);
  }
 }

void loop() {

  /*DHT Sensor*/
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  if (isnan(t) || isnan(h)) {
    Serial.println(" Failed to read from DHT \n");
  } else {
    Serial.println("");
    Serial.print(" Humidity: "); 
    Serial.print(h);
    Serial.print("%\t");
    Serial.print(" Temperature: "); 
    Serial.print(t);
    Serial.println("*C");
    Serial.println("");
  }

  /*DS3231 RTC*/
 /* displayTime();*/
  turnOffr1();
 
  /*HC-096 Bluetooth*/
  if(Serial.available())
  {//if there is data being recieved
    blueToothVal=Serial.read(); //read it
  }
  if (blueToothVal=='a')
  {//if value from bluetooth serial is n
    digitalWrite(8,LOW);            //switch on LED
    if (lastValue!='a')
      Serial.println(F("R1 is on")); //print LED is on
    lastValue=blueToothVal;
  }
  else if (blueToothVal=='b')
  {//if value from bluetooth serial is n
    digitalWrite(8,HIGH);             //turn off LED
    if (lastValue!='b')
      Serial.println(F("R2 is off")); //print LED is on
    lastValue=blueToothVal;
  }
  else if (blueToothVal=='c')
  {//if value from bluetooth serial is n
    digitalWrite(9,LOW);             //turn off LED
    if (lastValue!='c')
      Serial.println(F("R2 is off")); //print LED is on
    lastValue=blueToothVal;
  }
  else if (blueToothVal=='d')
  {//if value from bluetooth serial is n
    digitalWrite(9,HIGH);             //turn off LED
    if (lastValue!='d')
      Serial.println(F("R1 is off")); //print LED is on
    lastValue=blueToothVal;
  }
    else if (blueToothVal=='e')
  {//if value from bluetooth serial is n
    digitalWrite(10,LOW);             //turn off LED
    if (lastValue!='e')
      Serial.println(F("R3 is off")); //print LED is on
    lastValue=blueToothVal;
  }
  else if (blueToothVal=='f')
  {//if value from bluetooth serial is n
    digitalWrite(10,HIGH);             //turn off LED
    if (lastValue!='f')
      Serial.println(F("R3 is off")); //print LED is on
    lastValue=blueToothVal;
  }
    else if (blueToothVal=='g')
  {//if value from bluetooth serial is n
    digitalWrite(11,LOW);             //turn off LED
    if (lastValue!='g')
      Serial.println(F("R4 is off")); //print LED is on
    lastValue=blueToothVal;
  }
  else if (blueToothVal=='h')
  {//if value from bluetooth serial is n
    digitalWrite(11,HIGH);             //turn off LED
    if (lastValue!='h')
      Serial.println(F("R4 is off")); //print LED is on
    lastValue=blueToothVal;
  }
  delay(1000);
  
}
