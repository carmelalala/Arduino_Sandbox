#include <Wire.h>
#include <RtcDS3231.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

RtcDS3231<TwoWire> Rtc(Wire);
ESP8266WebServer server(80);

#define SensorPin A0          // the pH meter Analog output is connected with the Arduinoâ€™s Analog
unsigned long int avgValue;  //Store the average value of the sensor feedback
float b;
int buf[10],temp;
 

const char* ssid = "hackymody00_2";
const char* password =  "5dm1nm1cm1c";

int hh=0,mm=0;

void setup () 
{
    Serial.begin(115200);
    pinMode(D3,OUTPUT);  
    Rtc.Begin();

    RtcDateTime compiled = RtcDateTime(__DATE__, __TIME__);
    if (!Rtc.IsDateTimeValid()) 
    {
        Serial.println("RTC lost confidence in the DateTime!");
        Rtc.SetDateTime(compiled);
    }

    RtcDateTime now = Rtc.GetDateTime();
    
    Rtc.Enable32kHzPin(false);
    Rtc.SetSquareWavePin(DS3231SquareWavePin_ModeNone);
    
    WiFi.begin(ssid, password);  //Connect to the WiFi network
 
    while (WiFi.status() != WL_CONNECTED) {  //Wait for connection
      delay(500);
      Serial.println("Waiting to connect...");
    }
    
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP());  //Print the local IP
  
    server.on("/", handle_index);
    
    server.begin(); //Start the server
}
void phSensor(){
 for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
  { 
    buf[i]=analogRead(SensorPin);
    delay(10);
  }
  for(int i=0;i<9;i++)        //sort the analog from small to large
  {
    for(int j=i+1;j<10;j++)
    {
      if(buf[i]>buf[j])
      {
        temp=buf[i];
        buf[i]=buf[j];
        buf[j]=temp;
      }
    }
  }
  avgValue=0;
  for(int i=2;i<8;i++)                      //take the average value of 6 center sample
    avgValue+=buf[i];
  float phValue=(float)avgValue*5.0/1024/6; //convert the analog into millivolt
  phValue=3.5*phValue;                      //convert the millivolt into pH value
  Serial.print("    pH:");  
  Serial.print(phValue,2);
  Serial.println(" ");
   
  
}
void loop () 
{
    server.handleClient(); //Handling of incoming requests
    RtcDateTime now = Rtc.GetDateTime();
    //Print RTC time to Serial Monitor
    Serial.print("Date:");
    Serial.print(now.Year(), DEC);
    Serial.print("/");
    Serial.print(now.Month(), DEC);
    Serial.print("/");
    Serial.print(now.Day(), DEC);
    Serial.print("\n");
    Serial.print(" Time:");
    Serial.print(now.Hour(), DEC);
    Serial.print(":");
    Serial.print(now.Minute(), DEC);
    Serial.print(":");
    Serial.print(now.Second(), DEC);
    Serial.print("\n");




    phSensor();
    delay(1000); // one second
}

void handle_index() {
  server.send(200, "text/plain", "This is an index page.");
}
